---
name: Workflow
on:
  push:

jobs:

  CloneAssets:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
        with:
          repository: firmwareci/coreboot-assets
          token: ${{ secrets.PAT }}
      - uses: actions/upload-artifact@v3
        with:
          name: coreboot-assets
          path: ./3rdparty/blobs/mainboard/

  BuildQemuX86:
    runs-on: ubuntu-latest
    outputs:
      binaryArtifact: ${{ env.artifact}}
    steps:
      - run: echo "artifact=qemu-x86" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build Action
        uses: ./.github/actions/buildX86
        with:
          config: config.emulation_qemu_x86_i440fx
          artifact-path: ${{ env.artifact }}

  UploadQemuBinary: 
    needs: BuildQemuX86
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ needs.BuildQemuX86.outputs.binaryArtifact }}

      - uses: docker://glabelderp/uploader:v0.2
        with:
          PROJECT_UUID: 9fdf4cc9-5276-495b-8057-cf0e8d0ff747
          BINARY_PATH: ${{steps.download.outputs.download-path}}/coreboot.rom
        
          PROTOCOL: s3
          API: http://78.94.0.50:8080/request
          UPLOAD_PATH: qemu.rom

          S3_ACCESS: ${{ secrets.S3_ACCESS_ID }}
          S3_SECRET: ${{ secrets.S3_ACCESS_KEY }}
          S3_REGION: eu-central-1
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

  BuildUPSquared:
    runs-on: ubuntu-latest
    needs: CloneAssets
    outputs:
      binaryArtifact: ${{ env.artifact}}
    steps:
      - run: echo "artifact=up2" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          name: coreboot-assets
          path: ./3rdparty/blobs/mainboard/
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: coreboot-assets
      - name: Build Action
        uses: ./.github/actions/buildX86
        with:
          config: config.up2-linuxboot
          artifact-path: ${{ env.artifact }}

  UploadUP2Binary: 
    needs: BuildUPSquared
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ needs.BuildUPSquared.outputs.binaryArtifact }}
      - uses: geekyeggo/delete-artifact@v1
        with:
          name:  ${{ needs.BuildUPSquared.outputs.binaryArtifact }}
      - uses: docker://glabelderp/uploader:v0.2
        with:
          PROJECT_UUID: 941f7de0-cce1-4824-9b93-e57c5c5163cc
          BINARY_PATH: ${{steps.download.outputs.download-path}}/coreboot.rom
        
          PROTOCOL: s3
          API: http://78.94.0.50:8080/request
          UPLOAD_PATH: up2.rom

          S3_ACCESS: ${{ secrets.S3_ACCESS_ID }}
          S3_SECRET: ${{ secrets.S3_ACCESS_KEY }}
          S3_REGION: eu-central-1
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
