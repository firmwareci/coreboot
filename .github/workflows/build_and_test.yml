---
name: Fetch upstream changes

on:
  schedule: 
   - cron: '*/30 * * * *'
  push: 

jobs:
  sync:
    runs-on: ubuntu-latest
    name: Merge upstream
    outputs:
      changes: ${{ steps.fetch.outputs.has_new_commits }} 

    steps:
      - name: Checkout target repo
        uses: actions/checkout@v3
        with: 
          ref: OntoBase
      - name: Pull in newest changes
        id: fetch
        uses:  aormsby/Fork-Sync-With-Upstream-action@v3.2
        with: 
          target_sync_branch: OntoBase
          upstream_sync_repo: coreboot/coreboot
          upstream_sync_branch: master
          git_config_pull_rebase: "--keep-base"

  CloneAssets:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
        with:
          repository: firmwareci/coreboot-assets
          token: ${{ secrets.PAT }}
      - uses: actions/upload-artifact@v3
        with:
          name: coreboot-assets
          path: ./3rdparty/blobs/mainboard/

  BuildQemuX86:
    if: ${{ needs.sync.outputs.changes == 'true' }}
    needs: sync
    runs-on: ubuntu-latest
    outputs:
      binaryArtifact: ${{ env.artifact}}
    steps:
      - run: echo "artifact=qemu-x86" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build Action
        uses: ./.github/actions/buildX86
        with:
          config: config.emulation_qemu_x86_i440fx
          artifact-path: ${{ env.artifact }}

  UploadQemuBinary: 
    needs: BuildQemuX86
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ needs.BuildQemuX86.outputs.binaryArtifact }}

      - uses: docker://firmwareci/uploader:v1.0
        with:
          PROJECT_UUID: a04672ed-4ccc-4e0d-ab6a-f5fd4fac91e5
          COMMIT_HASH: ${{ github.sha }}

          BINARY_PATH: ${{steps.download.outputs.download-path}}/coreboot.rom
        
          PROTOCOL: s3
          API: http://relay.9esec.dev:8080/request
          UPLOAD_PATH: qemu.rom

          S3_ACCESS: ${{ secrets.S3_ACCESS_ID }}
          S3_SECRET: ${{ secrets.S3_ACCESS_KEY }}
          S3_REGION: eu-central-1
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

  BuildUPSquared:
    if:  ${{ needs.sync.outputs.changes  == 'true' }}
    needs: 
     - sync
     - CloneAssets
    runs-on: ubuntu-latest
    outputs:
      binaryArtifact: ${{ env.artifact}}
    steps:
      - run: echo "artifact=up2" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/download-artifact@v3
        with:
          name: coreboot-assets
          path: ./3rdparty/blobs/mainboard/
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: coreboot-assets
      - name: Build Action
        uses: ./.github/actions/buildX86
        with:
          config: config.up2-linuxboot
          artifact-path: ${{ env.artifact }}

  UploadUP2Binary: 
    needs: BuildUPSquared
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: ${{ needs.BuildUPSquared.outputs.binaryArtifact }}
      - uses: geekyeggo/delete-artifact@v1
        with:
          name:  ${{ needs.BuildUPSquared.outputs.binaryArtifact }}

      - uses: docker://firmwareci/uploader:v1.0
        with:
          PROJECT_UUID: fb32e102-28b6-4c41-9bc0-0983b30ef085
          COMMIT_HASH: ${{ github.sha }}
          BINARY_PATH: ${{steps.download.outputs.download-path}}/coreboot.rom
        
          PROTOCOL: s3
          API: http://relay.9esec.dev:8080/request
          UPLOAD_PATH: up2.rom

          S3_ACCESS: ${{ secrets.S3_ACCESS_ID }}
          S3_SECRET: ${{ secrets.S3_ACCESS_KEY }}
          S3_REGION: eu-central-1
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
      
